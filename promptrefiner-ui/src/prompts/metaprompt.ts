export const PROMPT_VERSION = "2024-12-claude-hybrid";

export interface FewShotPair {
  user: string;
  assistant: string;
}

export const ANALYZER_SYSTEM_PROMPT = `You are PromptRefiner's analysis engine (version ${PROMPT_VERSION}). Your responsibility is to examine a draft AI prompt, diagnose gaps, and produce both guidance and a structured blueprint that will later drive prompt synthesis.

Inputs you may receive:
- Target model the user intends to run (e.g., openai/gpt-4o-mini).
- Original prompt text.
- Optional extra context supplied by the user.
- Optional \`<external_context>\` block generated from web search containing title, summary, and URL snippets you can rely on.
 - Optional \`<external_context>\` block generated from web search containing title, summary, and URL snippets you can rely on.

Process requirements (think through each step inside <scratch_pad> but NEVER include that tag in your final response):
1. Summarize the user’s core intent and desired outcome.
2. Identify who the AI will be writing for (audience/end-user).
3. List success criteria or deliverables, noting missing items explicitly.
4. Capture required inputs or data the AI must see to succeed.
5. Note domain/background context that should accompany the prompt.
6. Enumerate constraints, guardrails, or formatting rules (existing or missing).
7. Infer tone/voice expectations.
8. Highlight potential risks or failure modes if unanswered.
9. Compose an evaluation checklist the user can run against model outputs.
10. Draft 2–5 clarifying questions targeting the biggest gaps; avoid yes/no unless unavoidable.

Output strictly as JSON matching this schema:
{
  "analysis": string,
  "improvementAreas": string[],
  "questions": [
    {
      "id": string,
      "question": string,
      "purpose": string
    }
  ],
  "blueprint": {
    "version": "${PROMPT_VERSION}",
    "intent": string,
    "audience": string,
    "successCriteria": string[],
    "requiredInputs": string[],
    "domainContext": string[],
    "constraints": string[],
    "tone": string,
    "risks": string[],
    "outputFormat": string,
    "evaluationChecklist": string[]
  },
  "overallConfidence": string
}

Rules:
- Fill every blueprint field; if info is missing, write "Not specified yet" or similar instead of leaving blanks.
- Align each clarifying question with an improvement area.
- Keep language concise, professional, and free of markdown outside JSON.
- Never emit code fences or additional explanations.`;

const ANALYZER_FEW_SHOT_CREATIVE_USER = `<target_model>openai/gpt-4o-mini</target_model>
<original_prompt>Create a one-page website for an online learning platform called “EduQuest” with interactive sections, dynamic hero tagline, featured courses, learning paths quiz, testimonials, and a footer with contact modal. Include HTML, embedded CSS, and JavaScript that rotates the hero tagline every 3 seconds.</original_prompt>
<extra_context></extra_context>`;

const ANALYZER_FEW_SHOT_CREATIVE_ASSISTANT = `{"analysis":"The draft prompt describes a rich single-page marketing site but omits audience specifics, branding direction, and detailed functionality for the quiz and modal. Without these details, the generated page may feel generic and lack the polish expected for EduQuest.","improvementAreas":["Clarify target learners and the tone/visual identity so styling and copy resonate.","Specify what the learning paths quiz should ask or how it should determine recommendations.","Describe the expected content depth for testimonials, featured courses, and contact modal messaging.","Outline accessibility or responsiveness requirements to ensure usability across devices."],"questions":[{"id":"target_learners","question":"Who is EduQuest primarily targeting (e.g., working professionals, high school students), and what tone should the site adopt to appeal to them?","purpose":"Sets direction for copy, design accents, and overall voice."},{"id":"quiz_logic","question":"What questions or logic should the Learning Paths quiz use to recommend content?","purpose":"Enables the JavaScript to provide a meaningful experience rather than placeholders."},{"id":"brand_style","question":"Do you have brand colors, typography, or visual motifs that must be reflected?","purpose":"Ensures the layout feels on-brand rather than generic."},{"id":"modal_content","question":"What information or actions should the contact modal emphasize (support hours, contact form fields, CTA)?","purpose":"Prevents the modal from shipping with vague placeholder text."}],"blueprint":{"version":"${PROMPT_VERSION}","intent":"Produce a polished, interactive single-page marketing site for EduQuest showcasing courses and engagement features.","audience":"Prospective learners evaluating EduQuest for flexible online education.","successCriteria":["Hero section showcases benefits with rotating tagline.","Featured courses section highlights instructors, summaries, and CTAs.","Learning Paths quiz gathers user preferences and returns guidance.","Testimonials present credible student stories.","Footer provides quick resource links plus actionable contact modal."],"requiredInputs":["List of target learner personas or demographics.","Key selling points or differentiators for EduQuest.","Quiz decision logic or sample questions.","Details for testimonials and featured courses."],"domainContext":["Online education platform competing with other e-learning providers.","Needs responsive, accessible web design best practices."],"constraints":["Deliver as single HTML file with embedded CSS and JavaScript.","Ensure responsiveness and accessible interactive elements.","Fixed navigation with category links and search bar."],"tone":"Inspirational, professional, student-centric.","risks":["Quiz feels superficial without concrete logic.","Modal may be generic, reducing conversion chances.","Inconsistent branding if colors/fonts are unspecified."],"outputFormat":"Single HTML document with inline CSS and JS.","evaluationChecklist":["Does the hero rotate taglines smoothly every 3 seconds?","Are navigation anchors, quiz, and modal fully functional?","Does the copy and styling feel tailored to EduQuest's brand and audience?","Is the layout responsive and accessible (ARIA attributes, keyboard navigation)?"]},"overallConfidence":"Medium readiness – core structure is outlined but lacks brand, content depth, and interaction logic details."}`;

const ANALYZER_FEW_SHOT_ANALYTICAL_USER = `<target_model>anthropic/claude-3.5-sonnet</target_model>
<original_prompt>Summarize Matterport's 2023 10-K in a memo highlighting key financial performance, market trends, and potential risks for the upcoming quarter.</original_prompt>
<extra_context></extra_context>`;

const ANALYZER_FEW_SHOT_ANALYTICAL_ASSISTANT = `{"analysis":"The prompt requests a memo from a long 10-K but does not specify audience, desired length, or which financial metrics matter most. Without guidance, the output may be unfocused or omit material risks.","improvementAreas":["Clarify who will read the memo and how detailed it should be.","Identify priority metrics or business units to focus on.","Specify time horizon and risk appetite to anchor the analysis.","Provide formatting expectations (headings, bullets) to improve readability."],"questions":[{"id":"memo_audience","question":"Who will receive the memo (e.g., executive leadership, finance team) and what level of technical detail do they expect?","purpose":"Tailors language, depth, and nuance to the reader."},{"id":"focus_areas","question":"Which aspects of Matterport’s performance should take priority (revenue segments, cash flow, competitive landscape)?","purpose":"Prevents the summary from diluting attention across the entire filing."},{"id":"format_preferences","question":"Do you want a specific structure (e.g., executive summary, key metrics, risks) or length limit?","purpose":"Ensures the memo is immediately usable without reformatting."},{"id":"risk_horizon","question":"Should the analysis emphasize short-term (next quarter) signals or broader strategic trends?","purpose":"Aligns the memo with decision-making needs."}],"blueprint":{"version":"${PROMPT_VERSION}","intent":"Condense Matterport's 2023 10-K into an actionable memo highlighting financial trends and upcoming risks.","audience":"Unspecified stakeholder group requiring clarification.","successCriteria":["Memo surfaces revenue trajectory, profitability, and segment performance.","Identifies market trends impacting Matterport.","Summarizes major risks and mitigation considerations.","Provides forward-looking insights for the upcoming quarter."],"requiredInputs":["Target audience and depth expectations.","Priority topics or KPIs to emphasize.","Preferred memo length or section structure."],"domainContext":["Enterprise readers expect concise, data-backed insights from SEC filings.","Need awareness of Matterport's 2023 performance drivers."],"constraints":["Must produce a memo format; other constraints undefined.","Citations or references to filing numbers may be valuable if requested."],"tone":"Professional, analytical, and concise.","risks":["Overly broad summary that misses critical metrics.","Misaligned tone if audience expectations remain unknown.","Lack of actionable recommendations without clarified scope."],"outputFormat":"Structured memo (headings and bullet points expected).","evaluationChecklist":["Does the memo capture key financial metrics and segment performance?","Are market trends and competitive dynamics synthesized clearly?","Are upcoming quarter risks identified with rationale?","Is the memo scoped appropriately for the specified audience and length?"]},"overallConfidence":"Low-to-medium readiness – essential details about audience, depth, and structure are missing."}`;

const ANALYZER_FEW_SHOT_CRASH_USER = `<target_model>openai/gpt-4o-mini</target_model>
<original_prompt>My app crashes when I click the submit button.</original_prompt>
<extra_context></extra_context>`;

const ANALYZER_FEW_SHOT_CRASH_ASSISTANT = `{"analysis":"The user reports a repeatable crash when submitting, but the prompt lacks crucial technical details (app type, environment, error output) that engineers need to reproduce and diagnose the issue.","improvementAreas":["Identify the platform and technology stack involved.","Capture the exact error behavior and any visible diagnostics.","Clarify reproducibility, inputs submitted, and when the issue began.","Document environment specifics and prior troubleshooting attempts."],"questions":[{"id":"application_type","question":"What kind of application is crashing (web app in a browser, native desktop, or mobile)?","purpose":"Platform helps determine tooling and debugging steps."},{"id":"error_behavior","question":"What exactly happens when it crashes (app closes, freezes, error message)?","purpose":"Clarifies crash severity and recovery path."},{"id":"error_message","question":"Do you see any error message, code, or console output when the crash occurs?","purpose":"Error details often pinpoint root causes."},{"id":"repro_steps","question":"Can you confirm the steps to reproduce and whether it happens every time?","purpose":"Ensures developers can replicate the failure consistently."},{"id":"environment_details","question":"Which operating system, device, and version are you using (include browser if web-based)?","purpose":"Environment mismatches frequently trigger crashes."},{"id":"recent_changes","question":"Did anything change shortly before the crash started (app update, plugin install, system change)?","purpose":"Recent changes often introduce regressions."}],"blueprint":{"version":"${PROMPT_VERSION}","intent":"Produce a thorough crash report that enables engineers to reproduce and debug the submit-button failure.","audience":"Support engineers or developers responsible for fixing the application crash.","successCriteria":["Describe the application type and version in detail.","List precise reproduction steps and whether the crash is consistent.","Include exact error messages, codes, or log snippets.","Specify environment details (OS, browser/device, versions).","Note inputs submitted and any recent changes or troubleshooting."],"requiredInputs":["Application/platform description and version.","Step-by-step reproduction sequence including input data.","Visible error messages, codes, or logs.","Environment specs (OS, device, browser).","Timeline and recent updates that may correlate."],"domainContext":["Crash reports typically follow structured debugging templates.","Useful diagnostics include logs, stack traces, and reproduction info."],"constraints":["Remain concise yet complete; avoid speculation.","Structure content so engineers can skim for key diagnostics."],"tone":"Calm, factual, and solution-focused.","risks":["Without environment or error data, engineers cannot reproduce the crash.","Missing recent-change context may hide the root cause."],"outputFormat":"Structured crash troubleshooting request with sections for summary, environment, reproduction, diagnostics, and attempted fixes.","evaluationChecklist":["Does the report specify platform, version, and environment?","Are reproduction steps and inputs clearly described?","Are error messages or logs captured verbatim?","Does it note when the issue began and any changes made?","Are attempted troubleshooting steps listed?"]},"overallConfidence":"Low readiness – essential diagnostic context is missing, so additional detail is required before a developer can act."}`;

const ANALYZER_FEW_SHOT_EXCEL_USER = `<target_model>openai/gpt-4o-mini</target_model>
<original_prompt>Write Python code to automate Excel.</original_prompt>
<extra_context></extra_context>`;

const ANALYZER_FEW_SHOT_EXCEL_ASSISTANT = `{"analysis":"'Automate Excel' is too broad—there is no information about the workbook structure, operations, business rules, or tooling constraints, so automation code cannot be scoped.","improvementAreas":["Clarify which Excel tasks need automation (read, transform, reports, formatting).","Describe workbook structure, sheets, and data columns.","Explain input source, output expectations, and business logic.","State library preferences, Python version, and execution workflow."],"questions":[{"id":"excel_tasks","question":"Which Excel tasks do you need to automate (reading data, applying formulas, formatting, generating reports, etc.)?","purpose":"Defines the core automation workflow."},{"id":"workbook_structure","question":"How is the workbook structured (sheet names, key columns, sample rows)?","purpose":"Guides how the script locates and manipulates data."},{"id":"input_source","question":"Where does the input data originate (existing Excel files, CSV, database, API)?","purpose":"Determines data loading steps and dependencies."},{"id":"output_expectations","question":"What should the automation produce (updated workbook, new report, charts, exports)?","purpose":"Ensures deliverables are explicit and testable."},{"id":"business_logic","question":"What calculations or business rules must be applied?","purpose":"Captures transformations the code must implement."},{"id":"environment_constraints","question":"What Python version and libraries are available or preferred?","purpose":"Aligns implementation with technical constraints."}],"blueprint":{"version":"${PROMPT_VERSION}","intent":"Define a concrete Excel automation specification covering tasks, structure, logic, and technical constraints.","audience":"Python automation developer building the Excel workflow.","successCriteria":["List the exact operations and triggers for automation.","Describe workbook layout, sheets, and key columns.","Detail input sources and desired outputs.","Capture formulas, aggregations, and validation rules.","Outline execution cadence and environment details."],"requiredInputs":["Excel task list with priorities.","Workbook schema (sheet names, column descriptions).","Business logic and formula requirements.","Input and output data formats.","Runtime details (Python version, libraries, scheduling)."],"domainContext":["Excel automation often uses pandas, openpyxl, or xlwings.","Reliable scripts require precise schema knowledge."],"constraints":["Specify if formatting and formulas must be preserved.","Note performance considerations for large datasets."],"tone":"Professional, thorough, and implementation-ready.","risks":["Ambiguity can lead to scripts that miss required transformations.","Ignoring environment constraints may produce unusable code."],"outputFormat":"Detailed automation brief with sections for objectives, inputs, logic, outputs, environment, and testing.","evaluationChecklist":["Are all target Excel operations described?","Is workbook structure and data schema documented?","Does the brief outline calculations and validation rules?","Are output deliverables and formats clear?","Does it note environment and scheduling constraints?"]},"overallConfidence":"Low readiness – significant scoping details are absent, risking a misaligned automation solution."}`;

const ANALYZER_FEW_SHOT_SQL_USER = `<target_model>openai/gpt-4o-mini</target_model>
<original_prompt>Write a SQL query to analyze sales performance.</original_prompt>
<extra_context></extra_context>`;

const ANALYZER_FEW_SHOT_SQL_ASSISTANT = `{"analysis":"The prompt requests a sales performance query but lacks database schema, metrics, filters, or business questions, making it impossible to craft a meaningful SQL statement.","improvementAreas":["Identify which sales KPIs or questions must be answered.","Describe relevant tables, columns, and relationships.","Specify time period, grouping dimensions, and filters.","Clarify SQL dialect and expected output structure."],"questions":[{"id":"analysis_goal","question":"What specific questions about sales performance do you need answered (e.g., revenue growth, top products, regional trends)?","purpose":"Focuses the query on business-relevant KPIs."},{"id":"schema_details","question":"Which tables and columns store the relevant data? Please provide table names and key fields.","purpose":"Ensures the SQL references the correct schema elements."},{"id":"time_scope","question":"Over what time period should the analysis run (and should it compare against another period)?","purpose":"Defines date filters and comparisons."},{"id":"grouping_dimensions","question":"How should results be grouped (by month, product, region, salesperson, customer segment)?","purpose":"Determines aggregation and GROUP BY clauses."},{"id":"filters","question":"Are there filters to apply (completed orders only, exclude returns, minimum purchase threshold)?","purpose":"Ensures the query matches business rules."},{"id":"sql_dialect","question":"Which SQL database or dialect are you using (PostgreSQL, MySQL, SQL Server, etc.)?","purpose":"Aligns syntax and functions with the target system."}],"blueprint":{"version":"${PROMPT_VERSION}","intent":"Produce a detailed SQL analytics brief that defines metrics, schema, filters, and output expectations.","audience":"Data analyst or engineer tasked with writing the SQL query.","successCriteria":["List primary KPIs and questions driving the analysis.","Document schema with table/column names and joins.","Define time filters, comparisons, and aggregation levels.","Specify grouping dimensions and sort preferences.","Capture SQL dialect and performance considerations."],"requiredInputs":["Business questions or KPIs to calculate.","Database schema details and join keys.","Time range and any comparison windows.","Required grouping and ordering preferences.","Filtering rules and data quality constraints."],"domainContext":["Sales analytics often requires joins between orders, customers, products, and regions.","Different SQL dialects require tailored syntax for dates and analytics functions."],"constraints":["Clarify acceptable run time and indexing expectations.","Indicate if intermediate tables or CTEs are allowed."],"tone":"Analytical, structured, and precise.","risks":["Ambiguous metrics lead to incorrect aggregations.","Schema gaps can produce invalid SQL or runtime errors."],"outputFormat":"SQL requirements document with sections for objectives, schema, filters, computations, output columns, and optimization notes.","evaluationChecklist":["Does it specify KPIs and business questions?","Are tables, joins, and key columns listed?","Is the analysis time frame clearly defined?","Are grouping and ordering directions included?","Is the SQL dialect or engine named?"]},"overallConfidence":"Low readiness – core schema and metric definitions are missing, so the analyst cannot begin writing SQL."}`;

export const ANALYZER_FEW_SHOTS: FewShotPair[] = [
  {
    user: ANALYZER_FEW_SHOT_CREATIVE_USER,
    assistant: ANALYZER_FEW_SHOT_CREATIVE_ASSISTANT,
  },
  {
    user: ANALYZER_FEW_SHOT_ANALYTICAL_USER,
    assistant: ANALYZER_FEW_SHOT_ANALYTICAL_ASSISTANT,
  },
  {
    user: ANALYZER_FEW_SHOT_CRASH_USER,
    assistant: ANALYZER_FEW_SHOT_CRASH_ASSISTANT,
  },
  {
    user: ANALYZER_FEW_SHOT_EXCEL_USER,
    assistant: ANALYZER_FEW_SHOT_EXCEL_ASSISTANT,
  },
  {
    user: ANALYZER_FEW_SHOT_SQL_USER,
    assistant: ANALYZER_FEW_SHOT_SQL_ASSISTANT,
  },
];

export const REFINER_SYSTEM_PROMPT = `You are PromptRefiner's synthesis engine (version ${PROMPT_VERSION}). You transform a draft prompt, a structured blueprint, and user-provided clarifications into a production-ready prompt tailored to the target model.

Inputs supplied:
- Target model.
- Original prompt text.
- Optional extra context, tone, or output requirements.
- Blueprint JSON generated during analysis.
- Clarifying questions and the user's answers (answers may be blank; handle gracefully).
- Optional \`<external_context>\` block with web search findings; leverage cited facts while keeping instructions accurate.
- Optional \`<variation_hint>\` block requesting an alternate angle; respect it while maintaining quality.

Internal process (reason inside <scratch_pad> and omit from final response):
1. Reconcile the draft prompt, blueprint, and answers; update blueprint fields when new detail arrives.
2. Note any remaining ambiguities; account for them in assumptions and change summary.
3. Structure the final prompt into explicit sections so downstream AIs receive clear guidance.
4. Emphasize instructions that align with the target model's capabilities and quirks.
5. Produce evaluation criteria users can apply to judge the AI's output quality.

Respond with strict JSON:
{
  "refinedPrompt": string,
  "guidance": string,
  "changeSummary": string[],
  "assumptions": string[],
  "evaluationCriteria": string[]
}

Refined prompt must use these markdown section headings in order:
## Role
## Goal
## Required Inputs
## Context / Background
## Constraints & Guardrails
## Tone & Voice
## Output Format
## Step-by-step Instructions
## Quality Checks

Rules:
- Populate every section. If you lack data, state "Not specified yet – please provide before use."
- Keep tone professional and direct.
- Do not echo the JSON schema, markdown fences, or scratch pads in your final message.
- Align changeSummary items with concrete improvements or open risks.`;

const REFINER_FEW_SHOT_CREATIVE_USER = `<target_model>openai/gpt-4o-mini</target_model>
<original_prompt>Create a one-page website for an online learning platform called “EduQuest” with interactive sections, dynamic hero tagline, featured courses, learning paths quiz, testimonials, and a footer with contact modal. Include HTML, embedded CSS, and JavaScript that rotates the hero tagline every 3 seconds.</original_prompt>
<extra_context></extra_context>
<tone>Inspiring and learner-focused</tone>
<output_requirements>Single HTML file with inline CSS/JS, responsive design.</output_requirements>
<blueprint>{"version":"${PROMPT_VERSION}","intent":"Produce a polished, interactive single-page marketing site for EduQuest showcasing courses and engagement features.","audience":"Prospective adult learners balancing work and continuing education.","successCriteria":["Hero section rotates taglines every 3 seconds and links to catalog.","Featured courses highlight subject, instructor, duration, and CTA.","Learning Paths quiz collects goals and preferred learning style, returning a suggested path.","Testimonials feel authentic with names and outcomes.","Footer presents support resources and a contact modal with form."],"requiredInputs":["Brand palette (teal/purple), typography (Poppins, Inter).","Quiz branching logic (3 questions).","Course catalog categories and sample course data.","Testimonials with learner names and outcomes."],"domainContext":["Competitive e-learning market emphasizing flexibility and career growth.","Needs responsive design for desktop, tablet, mobile."],"constraints":["Single HTML document with inline CSS and JavaScript.","Fixed navigation with categories and search bar.","Accessible components with keyboard support."],"tone":"Inspirational, empathetic, confident.","risks":["Quiz may feel superficial if questions lack depth.","Modal could be generic without describing support hours.","Potential performance issues from heavy media assets."],"outputFormat":"Single HTML file with inline CSS/JS.","evaluationChecklist":["Navigation links and search bar function smoothly.","Hero tagline rotates correctly with graceful transitions.","Quiz logic maps answers to learning path recommendations.","Testimonials and course cards display complete, branded copy.","Modal opens/closes accessibly with meaningful fields."]}</blueprint>
<questions_and_answers>{"target_learners":"Working professionals pursuing upskilling or career pivots.","quiz_logic":"Ask about current skill focus (Tech/Business/Creative), preferred learning style (Video/Project/Mixed), and weekly time commitment. Map combinations to curated learning paths.","brand_style":"Use EduQuest teal (#2dd4bf) and deep navy (#0f172a) with clean sans-serif fonts.","modal_content":"Include support hours (24/7 chat), contact form (name, email, message), and CTA to schedule a guidance call."}</questions_and_answers>`;

const REFINER_FEW_SHOT_CREATIVE_ASSISTANT = `{"refinedPrompt":"## Role\\nYou are a front-end engineer designing a single-page marketing site for EduQuest, an online learning platform for working professionals.\\n\\n## Goal\\nDeliver an interactive, responsive HTML page that inspires career-focused adults to enroll in EduQuest courses while collecting leads.\\n\\n## Required Inputs\\n- Brand palette: teal (#2dd4bf) accents with deep navy (#0f172a) backgrounds, typography using Poppins for headings and Inter for body text.\\n- Course data (title, category, instructor, duration, short summary).\\n- Testimonials including learner name, role, and concrete outcome.\\n- Learning Paths quiz logic mapping user answers to recommendation text.\\n- Support contact details (24/7 chat availability, guidance call CTA).\\n\\n## Context / Background\\nEduQuest helps busy professionals reskill through flexible, high-quality online programs. The page must feel modern, trustworthy, and geared toward tangible career outcomes.\\n\\n## Constraints & Guardrails\\n- Produce a single HTML file with inline CSS and JavaScript.\\n- Include a fixed navigation bar with Math, Science, Languages, Arts links plus a functional search input.\\n- Ensure all interactive elements are keyboard-accessible and meet WCAG contrast ratios.\\n- Optimize for fast load (avoid oversized media, lazy-load heavy assets).\\n\\n## Tone & Voice\\nInspirational, empathetic, and confident—highlight growth while remaining credible for professional adults.\\n\\n## Output Format\\nReturn valid HTML5 with <style> in the <head> and <script> before </body>. Comment major sections for maintainability.\\n\\n## Step-by-step Instructions\\n1. Build a hero section with video placeholder background overlay, rotating tagline (\"Learn at your own pace\", \"Discover new passions\", \"Expand your horizons\") cycling every 3 seconds, and a bold \"Get Started\" button linking to the course catalog anchor.\\n2. Create a featured courses grid displaying at least four cards with image placeholders, category label, title, instructor, duration, short benefit, and \"View course\" CTA.\\n3. Implement a Learning Paths quiz card that asks three questions (skill focus, learning style, weekly commitment) using radio inputs; on submit, display a tailored recommendation message based on combinations.\\n4. Add a Success Stories carousel or stacked testimonials with learner names, roles, and measurable outcomes (promotion, certification, salary increase).\\n5. Configure the footer with links to Blog, FAQ, Privacy Policy, plus a \"Contact Us\" button opening an accessible modal containing support blurb, hours (24/7 chat), form fields (name, email, message), and a \"Schedule a guidance call\" CTA.\\n6. Wire up JavaScript for tagline rotation, quiz evaluation, modal open/close, and smooth scrolling navigation.\\n7. Apply responsive layout rules for breakpoints at 1024px and 640px; ensure cards stack gracefully on small screens.\\n\\n## Quality Checks\\n- Verify keyboard navigation and focus management for nav, quiz, and modal.\\n- Confirm hero tagline rotation timing and smooth transitions.\\n- Test quiz recommendations for each answer combination.\\n- Validate HTML, CSS, and JS linting with no console errors.\\n- Inspect responsiveness across mobile, tablet, and desktop viewports.","guidance":"Position this prompt before coding to ensure design decisions stay aligned with EduQuest's brand. Adjust color codes, course/testimonial data, or quiz logic as the marketing team supplies updates. Reuse the structure for future landing pages by swapping out brand inputs and success criteria.","changeSummary":["Introduced explicit brand palette, typography, and target persona.","Detailed quiz logic and modal content to remove placeholder ambiguity.","Clarified accessibility, performance, and responsiveness guardrails.","Outlined sequential build steps so the engineer delivers every section."],"assumptions":["Course and testimonial data will be available before implementation.","Video background will use optimized assets to avoid performance issues."],"evaluationCriteria":["Does the final HTML validate and run without console errors?","Are all interactive elements accessible and keyboard-operable?","Do quiz recommendations align with provided mapping logic?","Is the visual styling consistent with the specified palette and typography?","Does the modal convey support info and lead capture as described?"]}`;

const REFINER_FEW_SHOT_ANALYTICAL_USER = `<target_model>anthropic/claude-3.5-sonnet</target_model>
<original_prompt>Summarize Matterport's 2023 10-K in a memo highlighting key financial performance, market trends, and potential risks for the upcoming quarter.</original_prompt>
<extra_context></extra_context>
<tone>Executive, data-backed</tone>
<output_requirements>Two-page memo max, headings with bullet points.</output_requirements>
<blueprint>{"version":"${PROMPT_VERSION}","intent":"Condense Matterport's 2023 10-K into an actionable memo highlighting financial trends and upcoming risks.","audience":"Executive leadership team seeking actionable insights.","successCriteria":["Surface revenue growth/decline metrics and key segment performance.","Call out major strategic initiatives and competitive dynamics.","Highlight forward-looking risks and potential catalysts for the next quarter.","Provide clear recommendations or watch items."],"requiredInputs":["Top-line revenue, net loss, adjusted EBITDA.","Segment performance (digital twins, enterprise vs. SMB).","Major partnerships or product launches.","Risk factors relevant to near-term outlook."],"domainContext":["Leadership reads dozens of memos—needs crisp synthesis rooted in data."],"constraints":["Two-page maximum with headings and bullets.","Call out data sources or filing references when quoting figures."],"tone":"Executive, data-backed, decisive.","risks":["Memo could become verbose without length guardrails.","Recommendations may feel weak without explicit metrics."],"outputFormat":"Structured memo with headings and bullets.","evaluationChecklist":["Does the memo capture core financial metrics with comparisons vs. prior year?","Are market trends and competitive moves contextualized?","Do risks tie to upcoming quarter expectations?","Are recommendations or next steps explicit and actionable?"]}</blueprint>
<questions_and_answers>{"memo_audience":"Executive leadership including CEO, CFO, COO.","focus_areas":"Emphasize revenue trend, operating expenses, enterprise adoption, and real estate market impacts.","format_preferences":"Begin with Executive Summary, then Financial Performance, Market Trends & Competitive Landscape, Risks & Watch Items, and Recommended Actions.","risk_horizon":"Prioritize near-term (next quarter) indicators with note on medium-term catalysts."}</questions_and_answers>`;

const REFINER_FEW_SHOT_ANALYTICAL_ASSISTANT = `{"refinedPrompt":"## Role\\nYou are an equity research analyst preparing an executive-ready memo on Matterport's FY2023 10-K for leadership review.\\n\\n## Goal\\nDeliver a two-page (max) memo that surfaces FY2023 performance, next-quarter risks, and recommended leadership actions.\\n\\n## Required Inputs\\n- FY2023 revenue, YoY growth, GAAP net loss, adjusted EBITDA.\\n- Breakdown of enterprise vs. SMB adoption and digital twin platform metrics.\\n- Major partnerships, product releases, or go-to-market shifts.\\n- Risk factors impacting the next quarter (e.g., real estate market softness, churn).\\n- Prior-year comparatives where available.\\n\\n## Context / Background\\nMatterport provides 3D digital twin technology. Leadership needs a concise snapshot to monitor momentum, assess market positioning, and align resources for the upcoming quarter.\\n\\n## Constraints & Guardrails\\n- Memo must fit within two pages (~800-900 words).\\n- Use the following structure: Executive Summary; Financial Performance; Market Trends & Competitive Landscape; Risks & Watch Items; Recommended Actions.\\n- Embed bullet points under each section for scanability.\\n- Cite figures with references (e.g., \\"FY2023 revenue up 15% YoY, p.42\\").\\n\\n## Tone & Voice\\nExecutive, data-backed, and decisive. Favor crisp phrasing over narrative detail.\\n\\n## Output Format\\nReturn plain text memo adhering to the required sections and bullet formatting. Separate sections with clear headings in all caps or bold.\\n\\n## Step-by-step Instructions\\n1. Draft a 4-5 sentence Executive Summary covering topline growth, profitability trajectory, and overarching narrative.\\n2. Summarize Financial Performance with bullets on revenue, expenses, margins, cash position, and segment detail (enterprise vs. SMB).\\n3. Outline Market Trends & Competitive Landscape describing demand drivers, industry headwinds/tailwinds, and strategic initiatives (partnerships, product launches).\\n4. Detail Risks & Watch Items focused on next-quarter impacts (real estate trends, budget cycles, churn). Add medium-term catalysts in a separate bullet if material.\\n5. Provide 3-4 Recommended Actions leadership should consider (e.g., reinforce enterprise pipeline, adjust cost controls, invest in product features).\\n6. Close with a short reminder of data sources and suggest follow-up analysis if gaps remain.\\n\\n## Quality Checks\\n- Does the memo respect the two-page limit and specified structure?\\n- Are all financial metrics supported with figures and comparisons?\\n- Do risks align with near-term outlook while acknowledging mid-term catalysts?\\n- Are recommendations actionable and prioritized?\\n- Is the tone consistent with executive expectations?","guidance":"Before drafting, gather the specified financial metrics and segment data. Update references if you pull from amended filings. Reuse this template for future filings by swapping company-specific metrics and risks.","changeSummary":["Locked in leadership-focused structure with required sections.","Anchored tone, length, and citation expectations for executive readership.","Specified financial metrics, segment details, and risk horizon to cover.","Outlined actionable recommendations section to ensure next steps."],"assumptions":["Detailed FY2023 metrics and page references are accessible to the analyst.","Leadership is comfortable with bullet-style memo presentation."],"evaluationCriteria":["Does the final memo stay within two-page guidance?","Are key financial and segment metrics highlighted with YoY context?","Do risk bullets focus on the upcoming quarter with evidence?","Are recommended actions concrete and relevant for leadership?","Is sourcing/citation handled per expectations?"]}`;

const REFINER_FEW_SHOT_CRASH_USER = `<target_model>openai/gpt-4o-mini</target_model>
<original_prompt>My app crashes when I click the submit button.</original_prompt>
<extra_context></extra_context>
<tone>Professional and concise</tone>
<output_requirements>Provide a structured crash report template.</output_requirements>
<blueprint>{"version":"${PROMPT_VERSION}","intent":"Produce a thorough crash report that enables engineers to reproduce and debug the submit-button failure.","audience":"Support engineers or developers responsible for fixing the application crash.","successCriteria":["Describe the application type and version in detail.","List precise reproduction steps and whether the crash is consistent.","Include exact error messages, codes, or log snippets.","Specify environment details (OS, browser/device, versions).","Note inputs submitted and any recent changes or troubleshooting."],"requiredInputs":["Application/platform description and version.","Step-by-step reproduction sequence including input data.","Visible error messages, codes, or logs.","Environment specs (OS, device, browser).","Timeline and recent updates that may correlate."],"domainContext":["Crash reports typically follow structured debugging templates.","Useful diagnostics include logs, stack traces, and reproduction info."],"constraints":["Remain concise yet complete; avoid speculation.","Structure content so engineers can skim for key diagnostics."],"tone":"Calm, factual, and solution-focused.","risks":["Without environment or error data, engineers cannot reproduce the crash.","Missing recent-change context may hide the root cause."],"outputFormat":"Structured crash troubleshooting request with sections for summary, environment, reproduction, diagnostics, and attempted fixes.","evaluationChecklist":["Does the report specify platform, version, and environment?","Are reproduction steps and inputs clearly described?","Are error messages or logs captured verbatim?","Does it note when the issue began and any changes made?","Are attempted troubleshooting steps listed?"]}</blueprint>
<questions_and_answers>{"application_type":"Web application accessed via Chrome.","error_behavior":"The browser tab displays a white screen, then reloads the app.","error_message":"Console shows the JavaScript TypeError: Cannot read properties of undefined (reading 'id') at submitHandler.js:42.","repro_steps":"Yes—fill out the checkout form with any data and click Submit; it happens every time.","environment_details":"Windows 11 Pro, Chrome 119.0.6045.160 on Dell XPS 15.","recent_changes":"Issue started today right after deploying v2.3 which included a new recommendations widget."}</questions_and_answers>`;

const REFINER_FEW_SHOT_CRASH_ASSISTANT = `{"refinedPrompt":"## Role\\nYou are reporting a critical crash to the engineering support team for immediate triage.\\n\\n## Goal\\nProvide engineers with the diagnostic detail they need to reproduce and debug the submit-button crash.\\n\\n## Required Inputs\\n- Application: Checkout web app, version 2.3 deployed today with new recommendations widget.\\n- Platform: Web (Chrome 119.0.6045.160) on Windows 11 Pro, Dell XPS 15.\\n- User profile: Logged-in customer submitting checkout form.\\n- Form payload: Standard checkout data (name, shipping, payment).\\n\\n## Context / Background\\nCrash began immediately after deploying v2.3 containing the recommendations widget. Prior versions did not exhibit this issue.\\n\\n## Constraints & Guardrails\\n- Stick to observed facts; avoid speculation.\\n- Include console error details verbatim.\\n- Note any security/privacy considerations when sharing logs.\\n\\n## Tone & Voice\\nProfessional, concise, diagnostic.\\n\\n## Output Format\\nReturn a structured incident report with the following sections.\\n\\n## Step-by-step Instructions\\n1. **Summary**: One sentence stating that the checkout web app crashes (white screen then reload) whenever the Submit button is clicked.\\n2. **Environment**: List OS, browser (with version), device, and app build/version.\\n3. **Reproduction Steps**: Provide numbered steps from opening checkout to clicking Submit; confirm 100% reproducible.\\n4. **Expected vs Actual**: Expected = proceed to order confirmation; Actual = white screen then reload with console error.\\n5. **Diagnostics**: Paste console error \\"TypeError: Cannot read properties of undefined (reading 'id')\\" at submitHandler.js:42. Mention whether network failures or server errors appear.\\n6. **Inputs Submitted**: Note that any standard checkout data triggers the issue (specify fields if relevant).\\n7. **Timeline & Recent Changes**: State crash began after v2.3 deploy introducing the recommendations widget.\\n8. **Attempted Troubleshooting**: Document that cache clearing/reloading does not resolve; no other steps taken yet.\\n9. **Impact**: Highlight that checkout flow is blocked for all users; classify severity as critical.\\n10. **Attachments**: Request inclusion of screenshots, HAR file, and reproduction video if available.\\n\\n## Quality Checks\\n- All sections are present and clearly labeled.\\n- Console error and file reference are quoted exactly.\\n- Reproduction steps are precise and repeatable.\\n- Timeline references the deployment change introducing the regression.\\n- Impact statement communicates business urgency.","guidance":"Attach console logs, network traces, and a short screen recording to accelerate investigation. If safe, restore the previous version to mitigate impact while fixes are developed.","changeSummary":["Structured the incident into summary, environment, reproduction, diagnostics, and impact.","Embedded verbatim console error to target submitHandler.js:42.","Connected start time with v2.3 deployment to highlight regression.","Flagged severity and immediate business impact to prioritize response."],"assumptions":["Developers have access to submitHandler.js and deployment logs.","No additional authentication or account context is required to reproduce."],"evaluationCriteria":["Do engineers understand platform, build, and reproduction steps?","Is the exact error captured for debugging?","Are recent changes and impact clearly connected?","Does the report avoid speculation and focus on evidence?","Are next diagnostic artifacts (screenshots, HAR) requested?"]}`;

const REFINER_FEW_SHOT_EXCEL_USER = `<target_model>openai/gpt-4o-mini</target_model>
<original_prompt>Write Python code to automate Excel.</original_prompt>
<extra_context></extra_context>
<tone>Clear and instructional</tone>
<output_requirements>Provide a detailed automation spec for the developer.</output_requirements>
<blueprint>{"version":"${PROMPT_VERSION}","intent":"Define a concrete Excel automation specification covering tasks, structure, logic, and technical constraints.","audience":"Python automation developer building the Excel workflow.","successCriteria":["List the exact operations and triggers for automation.","Describe workbook layout, sheets, and key columns.","Detail input sources and desired outputs.","Capture formulas, aggregations, and validation rules.","Outline execution cadence and environment details."],"requiredInputs":["Excel task list with priorities.","Workbook schema (sheet names, column descriptions).","Business logic and formula requirements.","Input and output data formats.","Runtime details (Python version, libraries, scheduling)."],"domainContext":["Excel automation often uses pandas, openpyxl, or xlwings.","Reliable scripts require precise schema knowledge."],"constraints":["Specify if formatting and formulas must be preserved.","Note performance considerations for large datasets."],"tone":"Professional, thorough, and implementation-ready.","risks":["Ambiguity can lead to scripts that miss required transformations.","Ignoring environment constraints may produce unusable code."],"outputFormat":"Detailed automation brief with sections for objectives, inputs, logic, outputs, environment, and testing.","evaluationChecklist":["Are all target Excel operations described?","Is workbook structure and data schema documented?","Does the brief outline calculations and validation rules?","Are output deliverables and formats clear?","Does it note environment and scheduling constraints?"]}</blueprint>
<questions_and_answers>{"excel_tasks":"Monthly, combine sales CSV files into a master workbook, clean data, calculate KPIs, and generate charts.","workbook_structure":"Master workbook 'Monthly_Sales_Report.xlsx' with sheets Raw_Data, Clean_Data, KPIs, Charts. Raw data has columns: order_id, region, product, units_sold, revenue, sale_date.","input_source":"Weekly CSV exports dropped in /data/sales/YYYY-MM-DD.csv.","output_expectations":"Updated Excel workbook with cleaned data, pivot-style KPI table, and refreshed bar/line charts saved to the Charts sheet.","business_logic":"Normalize region names, convert sale_date to date, calculate total revenue and units per region/product, calculate month-over-month growth, flag orders with negative revenue.","environment_constraints":"Python 3.10 on Windows Server, prefer pandas and openpyxl. Scheduled to run via Windows Task Scheduler on the 1st of each month."}</questions_and_answers>`;

const REFINER_FEW_SHOT_EXCEL_ASSISTANT = `{"refinedPrompt":"## Role\\nYou are a Python automation engineer tasked with building a monthly Excel reporting pipeline for the analytics team.\\n\\n## Goal\\nAutomate ingestion of weekly sales CSV files, cleanse data, compute KPIs, and update a master Excel report with refreshed charts.\\n\\n## Required Inputs\\n- Source directory: /data/sales/ containing weekly CSV exports (order_id, region, product, units_sold, revenue, sale_date).\\n- Master workbook: Monthly_Sales_Report.xlsx with sheets Raw_Data, Clean_Data, KPIs, Charts.\\n- Region normalization mapping (provide dictionary in config).\\n- Prior-month benchmark data for month-over-month calculations.\\n\\n## Context / Background\\nCurrently, analysts manually consolidate weekly exports into the master workbook. Automation should produce the month-end report on the 1st of each month.\\n\\n## Constraints & Guardrails\\n- Python 3.10 environment on Windows Server with pandas and openpyxl available.\\n- Preserve Charts sheet layout while refreshing underlying data references.\\n- Script must handle up to 100k rows per month.\\n\\n## Tone & Voice\\nPrecise, instructional, implementation-ready.\\n\\n## Output Format\\nProvide a step-wise build plan followed by acceptance criteria.\\n\\n## Step-by-step Instructions\\n1. **Ingestion**: Enumerate CSV files for the month, load via pandas, enforce schema (data types, required columns).\\n2. **Normalization**: Trim whitespace, standardize region names using mapping, convert sale_date to pandas datetime, enforce positive numeric types.\\n3. **Combine & Clean**: Concatenate files, drop duplicates, log anomalies (negative revenue, missing fields) to a report.\\n4. **Write Raw_Data**: Overwrite Raw_Data sheet with cleaned monthly dataset; retain headers and autofit columns.\\n5. **KPIs Calculation**: Group by region/product to compute total revenue, total units_sold, average order value, and month-over-month growth against prior month data. Write results to KPIs sheet sorted by revenue descending.\\n6. **Charts Refresh**: Update data ranges for existing charts on Charts sheet (use openpyxl to adjust series references). If ranges shift, regenerate bar chart (revenue by region) and line chart (month-over-month growth) while preserving formatting.\\n7. **Metadata & Logging**: Add run metadata (timestamp, file count, anomalies) to KPIs sheet footer; create logs directory storing monthly run log with counts and errors.\\n8. **Scheduling**: Package script as entry point \`python automate_report.py --month YYYY-MM\` for Task Scheduler. Document required environment variables (e.g., REGION_MAP_PATH).\\n\\n## Quality Checks\\n- All source CSVs processed exactly once; missing files trigger warnings.\\n- Data types validated; anomalies logged and surfaced in summary.\\n- KPIs sheet totals cross-check with manual spot calculations.\\n- Charts display updated month data and remain linked to new ranges.\\n- Workbook saves without corrupting existing formatting or formulas.","guidance":"Version-control the script, capture configuration (paths, region mapping) via environment variables, and add integration tests using sample CSVs to verify KPI outputs. Consider incremental weekly automation if the workload grows.","changeSummary":["Clarified exact automation scope: ingest CSVs, clean data, compute KPIs, refresh charts.","Documented workbook structure and sheet responsibilities.","Established logging, scheduling, and performance guardrails.","Outlined detailed step sequence to build and validate the pipeline."],"assumptions":["Past monthly benchmarks are available to compute growth metrics.","Region normalization mapping will be maintained externally."],"evaluationCriteria":["Does the plan specify ingestion, cleaning, KPI computation, and chart refresh steps?","Are workbook sheets updated with correct data and formatting?","Are anomalies logged and surfaced to analysts?","Is scheduling/runtime environment fully described?","Are performance and data-volume considerations addressed?"]}`;

const REFINER_FEW_SHOT_SQL_USER = `<target_model>openai/gpt-4o-mini</target_model>
<original_prompt>Write a SQL query to analyze sales performance.</original_prompt>
<extra_context></extra_context>
<tone>Analytical and executive-ready</tone>
<output_requirements>Deliver a SQL requirements brief before coding.</output_requirements>
<blueprint>{"version":"${PROMPT_VERSION}","intent":"Produce a detailed SQL analytics brief that defines metrics, schema, filters, and output expectations.","audience":"Data analyst or engineer tasked with writing the SQL query.","successCriteria":["List primary KPIs and questions driving the analysis.","Document schema with table/column names and joins.","Define time filters, comparisons, and aggregation levels.","Specify grouping dimensions and sort preferences.","Capture SQL dialect and performance considerations."],"requiredInputs":["Business questions or KPIs to calculate.","Database schema details and join keys.","Time range and any comparison windows.","Required grouping and ordering preferences.","Filtering rules and data quality constraints."],"domainContext":["Sales analytics often requires joins between orders, customers, products, and regions.","Different SQL dialects require tailored syntax for dates and analytics functions."],"constraints":["Clarify acceptable run time and indexing expectations.","Indicate if intermediate tables or CTEs are allowed."],"tone":"Analytical, structured, and precise.","risks":["Ambiguous metrics lead to incorrect aggregations.","Schema gaps can produce invalid SQL or runtime errors."],"outputFormat":"SQL requirements document with sections for objectives, schema, filters, computations, output columns, and optimization notes.","evaluationChecklist":["Does it specify KPIs and business questions?","Are tables, joins, and key columns listed?","Is the analysis time frame clearly defined?","Are grouping and ordering directions included?","Is the SQL dialect or engine named?"]}</blueprint>
<questions_and_answers>{"analysis_goal":"Identify top-performing products and regions by revenue and year-over-year growth for the last two quarters.","schema_details":"orders(order_id, customer_id, product_id, order_date, status, revenue, quantity); products(product_id, product_name, category); regions(customer_id, region_name).","time_scope":"Compare Q2 2024 vs Q2 2023 and report year-over-year change.","grouping_dimensions":"Group by region_name and product_name; include category for context.","filters":"Use orders with status = 'completed'; exclude any orders with revenue <= 0.","sql_dialect":"PostgreSQL 14."}</questions_and_answers>`;

const REFINER_FEW_SHOT_SQL_ASSISTANT = `{"refinedPrompt":"## Role\\nYou are a data analyst preparing requirements for a PostgreSQL sales performance query.\\n\\n## Goal\\nDeliver a SQL requirements brief that captures schema, metrics, filters, and grouping needed to analyze product and regional performance year-over-year.\\n\\n## Required Inputs\\n- Tables: orders(order_id, customer_id, product_id, order_date, status, revenue, quantity); products(product_id, product_name, category); regions(customer_id, region_name).\\n- Time frame: Q2 2024 compared to Q2 2023.\\n- Only completed orders with revenue > 0.\\n\\n## Context / Background\\nLeadership wants visibility into which product-region combinations drove growth this quarter versus the same quarter last year.\\n\\n## Constraints & Guardrails\\n- PostgreSQL 14 syntax (window functions and CTEs allowed).\\n- Query should complete within acceptable time for ~5M orders; indexes on orders(order_date, status) and regions(customer_id) are available.\\n\\n## Tone & Voice\\nStructured, precise, and data-focused.\\n\\n## Output Format\\nProvide a numbered requirements brief; conclude with validation steps.\\n\\n## Step-by-step Instructions\\n1. **Business Objectives**: State that the query must compute total revenue, quantity, and year-over-year growth for each region_name + product_name pair, grouped by product category.\\n2. **Schema & Joins**: Document joins orders -> products via product_id and orders -> regions via customer_id. Note that orders.status must equal 'completed'.\\n3. **Time Filters**: Define Q2 2024 as order_date between 2024-04-01 and 2024-06-30; Q2 2023 similarly. Mention using CASE expressions or CTEs to separate periods.\\n4. **Metrics**: Specify calculations: current_revenue, prior_revenue, revenue_yoy_pct, current_quantity, prior_quantity. Include safeguards to avoid division by zero.\\n5. **Grouping & Sorting**: Describe grouping by region_name, product_name, products.category with ordering by revenue_yoy_pct DESC and optional limit to top 20 rows.\\n6. **Filters**: Enforce revenue > 0 and status = 'completed'; note optional threshold for minimum quantity.\\n7. **Output Columns**: List required columns (region_name, product_name, category, current_revenue, prior_revenue, revenue_yoy_pct, current_quantity, prior_quantity).\\n8. **Performance Notes**: Recommend using existing indexes, consider materialized CTE for filtered orders, and review EXPLAIN ANALYZE if execution exceeds 500 ms.\\n9. **Validation Steps**: Outline checks comparing totals vs finance reports, verifying year-over-year calculations on sampled products, and ensuring no null regions/products appear.\\n\\n## Quality Checks\\n- Requirements cover objectives, schema, metrics, filters, and ordering.\\n- Time windows and year-over-year calculations are unambiguous.\\n- Output column definitions match leadership needs.\\n- Performance and validation guidance are included.\\n- PostgreSQL-specific considerations are addressed.","guidance":"After drafting SQL, run EXPLAIN ANALYZE to confirm index usage and ensure year-over-year calculations match finance benchmarks. Consider a materialized view if leadership wants recurring access.","changeSummary":["Captured business goals, schema, and join relationships explicitly.","Defined exact time ranges and year-over-year metrics for Q2 comparison.","Clarified grouping, ordering, and output columns for leadership review.","Provided performance and validation guidance tailored to PostgreSQL."],"assumptions":["Orders table contains all necessary revenue/quantity fields without additional adjustments.","Region mapping via the regions table is complete for relevant customers."],"evaluationCriteria":["Does the brief enable an analyst to write SQL without extra clarification?","Are KPIs, schema, and filters clearly articulated?","Is the time comparison window explicit?","Do performance notes align with dataset scale?","Are validation steps provided to confirm accuracy?"]}`;

export const REFINER_FEW_SHOTS: FewShotPair[] = [
  {
    user: REFINER_FEW_SHOT_CREATIVE_USER,
    assistant: REFINER_FEW_SHOT_CREATIVE_ASSISTANT,
  },
  {
    user: REFINER_FEW_SHOT_ANALYTICAL_USER,
    assistant: REFINER_FEW_SHOT_ANALYTICAL_ASSISTANT,
  },
  {
    user: REFINER_FEW_SHOT_CRASH_USER,
    assistant: REFINER_FEW_SHOT_CRASH_ASSISTANT,
  },
  {
    user: REFINER_FEW_SHOT_EXCEL_USER,
    assistant: REFINER_FEW_SHOT_EXCEL_ASSISTANT,
  },
  {
    user: REFINER_FEW_SHOT_SQL_USER,
    assistant: REFINER_FEW_SHOT_SQL_ASSISTANT,
  },
];
